@model Pinturería_Acuarela.Models.ViewModels.Orders.IndexViewModel
@using System.Globalization
@{
    ViewData["Title"] = "Ordenes";
}

<!-- Data table -->
<link href="~/lib/datatables/media/css/dataTables.bootstrap4.css" rel="stylesheet">

<!-- This is data table -->
<script src="~/lib/datatables/datatables.min.js"></script>

<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <div class="row page-titles">
        <div class="col-md-5 col-8 align-self-center">
            <h3 class="text-themecolor m-b-0 m-t-0">Ordenes</h3>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Inicio</a></li>
                <li class="breadcrumb-item active">Ordenes</li>
            </ol>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- End Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->

    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-body">
                    <div class="d-flex flex-column flex-sm-row justify-content-between">
                        <div class="d-flex flex-column flex-sm-row mb-2">
                            <h2 class="card-title mr-2">Ordenes del año</h2>
                            @Html.DropDownList("yearSelected", Model.Years, new { @class = "form-control", @style = "max-width: fit-content" })
                        </div>
                        <div>
                            <a asp-area="" asp-controller="Orders" asp-action="New" class="btn btn-info"><i class="bi bi-plus-lg"></i> Nueva orden</a>
                        </div>
                    </div>
                    <div class="table-responsive m-t-10">
                        <table id="DataTable" class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Sucursal</th>
                                    <th>Fecha</th>
                                    <th>Estado</th>
                                    <th>Eliminar</th>
                                </tr>
                            </thead>
                            <tbody id="table_body">
                                @foreach (var item in Model.Orders)
                                {
                                    <tr data-id="@item.ID">
                                        <td style="cursor: pointer">@item.User.Business.Address</td>
                                        <td style="cursor: pointer">@item.CreatedAt.ToString("dd/MM/yyyy - HH:mm")</td>
                                        <td style="cursor: pointer">@(item.Status == false ? "En espera" : "Cerrada")</td>
                                        <td>
                                            <div class='d-flex flex-row justify-content-center'>
                                                <button name="btnDelete" type='button' class='btn btn-danger mr-2' onclick="deleteObj(@item.ID)"><i class="bi bi-trash"></i></button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <form id="form-delete" method="POST" asp-area="" asp-controller="Orders" asp-action="SoftDelete">
        @Html.AntiForgeryToken()
        <input type="hidden" name="id" value="">
    </form>
</div>

<script>
    function deleteObj(id) {
        Swal.fire({
            title: "¿Seguro deseas eliminar esta orden?",
            text: "Esta acción no se puede deshacer",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Eliminar',
            buttonsStyling: false,
            customClass: {
                confirmButton: 'btn btn-danger waves-effect waves-light px-3 py-2',
                cancelButton: 'btn btn-default waves-effect waves-light px-3 py-2'
            }
        }).then((result) => {
            if (result.isConfirmed) {
                $("#form-delete input[name='id']").val(id);
                sendForm();
            }
        });
    }

    function sendForm() {
        let form = document.getElementById('form-delete');

        // Enviar solicitud AJAX
        $.ajax({
            url: $(form).attr('action'), // Utiliza la ruta del formulario
            method: $(form).attr('method'), // Utiliza el método del formulario
            data: $(form).serialize(), // Utiliza los datos del formulario
            success: function (response) {
                Swal.fire({
                    icon: 'success',
                    title: response.message,
                    confirmButtonColor: '#1e88e5',
                });
                removeFromTable(response.data);
            },
            error: function (errorThrown) {
                Swal.fire({
                    icon: 'error',
                    title: errorThrown.responseJSON.title,
                    text: errorThrown.responseJSON.message,
                    confirmButtonColor: '#1e88e5',
                });
            }
        });
    }

    $(document).ready(function () {
        let dataTable = $('#DataTable').DataTable({
            "ordering": false,
            "language": {
                "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ ordenes",
                "sInfoEmpty": "Mostrando 0 a 0 de 0 ordenes",
                "sInfoFiltered": "(filtrado de _MAX_ ordenes en total)",
                "emptyTable": 'No hay ordenes que coincidan con la búsqueda',
                "sLengthMenu": "Mostrar _MENU_ ordenes",
                "sSearch": "Buscar:",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior",
                },
            },
        });

        $("#DataTable tbody tr").on("click", function (e) {
            let clickedCellIndex = $(e.target).closest("td").index();
            let lastCellIndex = $(this).find("td").length - 1;

            if (clickedCellIndex !== lastCellIndex) {
                window.location.href = window.location.origin + "/Orders/Details/" + $(this).data("id");
            }
        });



        dataTable.on('draw.dt', function () {
            $("#DataTable tbody tr").on("click", function (e) {
                let clickedCellIndex = $(e.target).closest("td").index();
                let lastCellIndex = $(this).find("td").length - 1;

                if (clickedCellIndex !== lastCellIndex) {
                    window.location.href = window.location.origin + "/Orders/Details/" + $(this).data("id");
                }
            });
        });
    });
</script>

<script>
    function createDateWithTime(dateString) {
        let date = new Date(dateString);
        let day = ("0" + date.getDate()).slice(-2);
        let month = ("0" + (date.getMonth() + 1)).slice(-2);
        let year = date.getFullYear();
        let hours = ("0" + date.getHours()).slice(-2);
        let minutes = ("0" + date.getMinutes()).slice(-2);
        return day + "/" + month + "/" + year + " - " + hours + ":" + minutes;
    }

    function fillTable(data) {
        data.forEach(function (order) {
            let button = `
                <div class='d-flex flex-row justify-content-center'>
                    <button name="btnDelete" type='button' class='btn btn-danger mr-2' onclick="deleteObj(${order.id})"><i class="bi bi-trash"></i></button>
                </div>`;
            let row = [
                order.address,
                createDateWithTime(order.createdAt),
                order.status,
                button
            ];
            let addedRow = $('#DataTable').DataTable().row.add(row).draw().node();
            // Establecer el atributo data-id en la fila
            addedRow.setAttribute('data-id', order.id);
            $(addedRow).find('td:eq(0), td:eq(1), td:eq(2)').css('cursor', 'pointer');
        });
    }

    function removeFromTable(id) {
        $('#DataTable').DataTable().row(`[data-id="${id}"]`).remove().draw();
    }

    function clearTable() {
        $('#DataTable').DataTable().clear().draw();
    }

    $("#yearSelected").on("change", function () {
        clearTable();
        $.ajax({
            url: "/Orders/GetOrdersByYear",
            method: "GET",
            data: { year: $(this).val() },
            success: function (response) {
                fillTable(response.data);
            },
            error: function (errorThrown) {
                Swal.fire({
                    icon: 'error',
                    title: errorThrown.responseJSON.title,
                    text: errorThrown.responseJSON.message,
                    confirmButtonColor: '#1e88e5',
                });
            }
        });
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>