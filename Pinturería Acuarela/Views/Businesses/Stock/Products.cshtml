@model Pinturería_Acuarela.Models.ViewModels.Businesses.ProductsViewModel
@using System.Globalization

@{
    ViewData["Title"] = "Productos";
    DateTime today = DateTime.UtcNow.AddHours(-3);
}

<link href="~/lib/css-chart/css-chart.css" rel="stylesheet">
<link href="~/css/cards.css" rel="stylesheet">
<!--This page css - Morris CSS -->
<link href="~/lib/c3-master/c3.min.css" rel="stylesheet">
<!-- Vector CSS -->
<link href="~/lib/vectormap/jquery-jvectormap-2.0.2.css" rel="stylesheet">

<!-- Data table -->
<link href="~/lib/datatables/media/css/dataTables.bootstrap4.css" rel="stylesheet">

<!-- This is data table -->
<script src="~/lib/datatables/datatables.min.js"></script>


<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <div class="row page-titles">
        <div class="col-md-5 col-8 align-self-center">
            <h3 class="text-themecolor m-b-0 m-t-0">Sucursales</h3>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Inicio</a></li>
                <li class="breadcrumb-item"><a asp-area="" asp-controller="Businesses" asp-action="Index">Sucursales</a></li>
                <li class="breadcrumb-item"><a asp-area="" asp-controller="Businesses" asp-action="Details" asp-route-id="@Model.Business.ID">@Model.Business.Address</a></li>
                <li class="breadcrumb-item active">Stock</li>
            </ol>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- End Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-body">
                    <div class="d-flex flex-md-row flex-column justify-content-between">
                        <h2 class="card-title">Listado de productos de @Model.Business.Address</h2>
                        <div>
                            <a asp-area="" asp-controller="Businesses" asp-action="AssociateProducts" asp-route-id="@Model.Business.ID" class="btn btn-info">Asociar productos</a>
                        </div>
                    </div>
                    <div class="table-responsive m-t-10">
                        <table id="DataTable" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Código</th>
                                    <th>Descripción</th>
                                    <th>Marca</th>
                                    <th>Stock</th>
                                    <th>Editar stock</th>
                                </tr>
                            </thead>
                            <tbody id="table_body">
                                @foreach (var item in Model.Products)
                                {
                                    <tr data-id="@item.ProductID">
                                        <td>@Html.DisplayFor(c => item.Product.InternalCode)</td>
                                        <td>@Html.DisplayFor(c => item.Product.Description)</td>
                                        <td>@Html.DisplayFor(c => item.Product.Brand.Name)</td>
                                        <td>@Html.DisplayFor(c => item.Stock)</td>
                                        <td class='d-flex flex-row justify-content-center'>
                                            <button type='button' class='btn btn-outline-info btn-rounded btn-sm mr-2' onclick='edit(@Json.Serialize(item))'><i class="bi bi-pencil"></i></button>
                                            <button type='button' class='btn btn-danger btn-rounded btn-sm ml-2' onclick='deleteObj(@item.ProductID)'><i class='bi bi-trash3'></i></button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <form id="form-delete" method="POST" asp-area="" asp-controller="Businesses" asp-action="DeleteProduct">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="businessID" value="@Model.Business.ID">
                        <input type="hidden" name="productID" value="">
                    </form>
                    <form id="form-updateStock" method="POST" asp-area="" asp-controller="Businesses" asp-action="UpdateStock">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="businessID" value="@Model.Business.ID">
                        <input type="hidden" name="productID" value="">
                        <input type="hidden" name="stock" value="">
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    function fillTable(item) {
        let content = `
                    <tr data-id='${item.productID}'>
                    <td>${item.product.internalCode}</td>
                    <td>${item.product.description}</td>
                    <td>${item.product.brand.name}</td>
                    <td>${item.stock}</td>
                    <td class='d-flex flex-row justify-content-center'>
                        <button type='button' class='btn btn-outline-info btn-rounded btn-sm mr-2' onclick='edit(${JSON.stringify(item)})'><i class="bi bi-pencil"></i></button>
                        <button type='button' class='btn btn-danger btn-rounded btn-sm ml-2' onclick='deleteObj(${item.productID})'><i class='bi bi-trash3'></i></button>
                    </td>
                </tr>`;
        $('#DataTable').DataTable().row.add($(content)).draw();
    }

    function removeFromTable(id) {
        $('#DataTable').DataTable().row(`[data-id="${id}"]`).remove().draw();
    }

    function deleteObj(id) {
        Swal.fire({
            title: "¿Seguro deseas eliminar este producto?",
            text: "Esta acción no se puede deshacer",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Eliminar',
            buttonsStyling: false,
            customClass: {
                confirmButton: 'btn btn-danger waves-effect waves-light px-3 py-2',
                cancelButton: 'btn btn-default waves-effect waves-light px-3 py-2'
            }
        }).then((result) => {
            if (result.isConfirmed) {
                $("#form-delete input[name='productID']").val(id);
                sendForm("delete");
            }
        });
    }

    function sendForm(action) {
        let form = document.getElementById(`form-${action}`);

        let errors = $(".input-validation-error");

        if (errors.length === 0) {
            // Enviar solicitud AJAX
            $.ajax({
                url: $(form).attr('action'), // Utiliza la ruta del formulario
                method: $(form).attr('method'), // Utiliza el método del formulario
                data: $(form).serialize(), // Utiliza los datos del formulario
                success: function (response) {
                    $("#btnCloseModalCreate").click();
                    Swal.fire({
                        icon: 'success',
                        title: response.message,
                        confirmButtonColor: '#1e88e5',
                    });
                    if (action === 'updateStock') {
                        removeFromTable(response.data.productID);
                        fillTable(response.data);
                    } else {
                        removeFromTable(response.data);
                    }
                },
                error: function (errorThrown) {
                    Swal.fire({
                        icon: 'error',
                        title: errorThrown.responseJSON.title,
                        text: errorThrown.responseJSON.message,
                        confirmButtonColor: '#1e88e5',
                    });
                }
            });
        }
    }
</script>

<script>
    function edit(entity) {
        Swal.fire({
            title: 'Ingrese el nuevo stock:',
            text: `Stock anterior: ${entity.stock} u.`,
            input: 'number',
            inputAttributes: {
                min: 0,
                step: 1
            },
            showCancelButton: true,
            confirmButtonText: 'Confirmar',
            cancelButtonText: 'Cancelar',
            buttonsStyling: false,
            customClass: {
                confirmButton: 'btn btn-success waves-effect waves-light px-3 py-2',
                cancelButton: 'btn btn-default waves-effect waves-light px-3 py-2'
            },
            showLoaderOnConfirm: true,
            inputValidator: (value) => {
                if (!value || value < 0) {
                    return 'Por favor, ingrese una cantidad válida';
                }
            },
            preConfirm: (cantidad) => {
                $("#form-updateStock input[name='productID']").val(entity.productID);
                $("#form-updateStock input[name='stock']").val(cantidad);
                sendForm('updateStock');
            },
        });
    }

    $('#DataTable').DataTable({
        "language": {
            "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ productos",
            "sInfoEmpty": "Mostrando 0 a 0 de 0 productos",
            "sInfoFiltered": "(filtrado de _MAX_ productos en total)",
            "emptyTable": 'No hay productos que coincidan con la búsqueda',
            "sLengthMenu": "Mostrar _MENU_ productos",
            "sSearch": "Buscar:",
            "oPaginate": {
                "sFirst": "Primero",
                "sLast": "Último",
                "sNext": "Siguiente",
                "sPrevious": "Anterior",
            },
        },
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>